const line = require('@line/bot-sdk');
const config = require('./config');
// const dotenv = require('dotenv').config();
// create LINE SDK client
const client = new line.Client(config);
const fnWord = function (event) {
  let words = event.message.text;
  let tokens = event.replyToken;
  if (event.type !== 'message' || event.message.type !== 'text') {
    // ignore non-text-message event
    // return Promise.resolve(null);
    return null;
  } else if (words) {
    // return client.replyMessage(tokens, {type: 'text', text: words});
    switch (words) {
      // case 1
      case "mrjane":
        return client.replyMessage(tokens, { type: 'text', text: words });
        break;
      // case 2
      case "hello":
        return client.replyMessage(tokens, { type: 'text', text: "‡∏°‡∏≠‡∏ô‡∏¥‡πà‡∏á‡∏Ç‡∏≤‡∏ö‡∏ö‡∏ö‡πÄ‡∏û‡∏¥‡πâ‡∏•‡πÜ‡πÜ" });
        break;
      // case 3
      case `m`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏Ñ‡∏ô‡∏ï‡πâ‡∏≤‡∏ß‡∏ß‡∏ß‡∏ä‡∏π‡πâ‡∏ß‡∏ß‡∏ß‡∏ß' });
        break;
      // case 4
      case `‡∏ú‡∏≠`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏û‡∏≠‡∏î‡∏π‡∏£‡∏ß‡∏°‡πÜ‡πÅ‡∏•‡πâ‡∏ß‡∏°‡∏µ‡πÄ‡∏™‡∏ô‡πà‡∏´‡πå ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏Å‡∏¥‡∏ô‡∏ô‡∏ô‡∏ô‡∏ô‡∏ô' });
        break;

      // case 5
      case `‡∏à‡∏±‡∏™‡∏ï‡∏¥‡∏ô`:
        return client.replyMessage(tokens, { type: 'text', text: '‡πÅ‡∏≠‡∏ö‡∏£‡∏≠' });
        break;
      // case 6
      case `‡∏î‡∏µ‡∏à‡πâ‡∏≤`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö' });
        break;
      // case 7
      case `‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö' });
        break;
      // case 8
      case `‡∏î‡∏µ‡∏Ñ‡πà‡∏∞`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö' });
        break;
      // case 9
      case `‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö' });
        break;
      // case 10
      case `‡∏Ñ‡∏£‡∏π‡πÄ‡∏™‡∏Å`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏Å‡∏£‡∏∞‡∏î‡∏Å‡πÇ‡∏ä‡∏ß‡πå‡πÅ‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö' });
        break;
      // case 11
      case `‡∏à‡∏≤‡∏£‡∏ö‡∏µ`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏°‡∏∂‡∏á‡πÄ‡∏Ñ‡∏¢‡∏ü‡∏±‡∏á‡∏ô‡∏¥‡∏ó‡∏≤‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á ‡∏ô‡∏Å‡πÅ‡∏™‡∏Å‡∏ö‡πà !!!!' });
        break;
      // case 12
      case `‡∏•‡∏±‡∏Å`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏ô‡∏±‡∏Å‡∏¢‡πà‡∏≤‡∏á‡∏´‡∏°‡∏π‡πÉ‡∏ô‡∏ï‡∏≥‡∏ô‡∏≤‡∏ô' });
        break;
      // case 13
      case `‡∏ß‡∏≤‡∏ó‡∏¥‡∏ï`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏ö‡πà‡∏ß‡πà‡∏≤‡∏á ‡∏¢‡πà‡∏≤‡∏á‡∏´‡∏°‡∏π‡∏≠‡∏¢‡∏π‡πà' });
        break;
      // case 14
      case `‡∏û‡∏µ‡πà‡∏≠‡∏≠‡∏ü`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏´‡∏•‡πà‡∏≠‡πÄ‡∏ó‡πà‡∏´‡πå ‡πÄ‡∏ï‡πá‡∏° 10 ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏±‡∏Å' });
        break;
      // case 15
      case `command`:
        return client.replyMessage(tokens, { type: 'text', text: 
        '‡∏û‡∏µ‡πà‡∏≠‡∏≠‡∏ü ‡∏ß‡∏≤‡∏ó‡∏¥‡∏ï ‡∏•‡∏±‡∏Å ‡∏à‡∏≤‡∏£‡∏ö‡∏µ ‡∏Ñ‡∏£‡∏π‡πÄ‡∏™‡∏Å ‡∏à‡∏±‡∏™‡∏ï‡∏¥‡∏ô ‡∏ú‡∏≠ hello m ‡πÄ‡∏≠‡πá‡∏°‡∏Ñ‡∏ô‡∏î‡∏µ ‡∏õ‡∏≤‡∏•‡πå‡∏°‡∏°‡∏µ‡πà ‡πÄ‡∏à‡∏µ‡πä‡∏¢‡∏ö ‡∏ï‡πâ‡∏≤ ‡∏à‡πà‡∏≠‡∏¢ ‡πÇ‡∏≠‡πâ ‡πÑ‡∏Å‡πà ‡∏à‡∏¥‡πä‡∏ö' });
        break;
      // case 16
      case `‡πÄ‡∏≠‡πá‡∏°‡∏Ñ‡∏ô‡∏î‡∏µ`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏î‡∏µ‡πÑ‡∏°‡πà‡∏´‡πà‡∏≤‡∏á‡πÄ‡∏´‡∏¥‡∏ô‡∏ô‡∏ô‡∏ô‡∏ô‡∏ô‡∏ô' });
        break;
      // case 17
      case `‡∏õ‡∏≤‡∏•‡πå‡∏°‡∏°‡∏µ‡πà`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏ô‡∏™. ‡∏ô‡∏≤‡∏£‡∏µ‡∏£‡∏±‡∏ï‡∏ô‡πå ‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡∏Å‡∏Å‡∏Å‡∏Å' });
        break;
      // case 18
      case `‡πÄ‡∏à‡∏µ‡πä‡∏¢‡∏ö`:
        return client.replyMessage(tokens, { type: 'text', text: '‡πÅ‡∏ö‡∏ô' });
        break;
      // case 19
      case `‡∏ï‡πâ‡∏≤`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏≠‡∏¢‡πà‡∏≤‡∏ß‡πà‡∏≤‡πÅ‡∏ï‡πà‡∏ñ‡∏π‡∏Å‡∏´‡∏ß‡∏¢‡πÄ‡∏•‡∏¢ ‡πÅ‡∏Ñ‡πà‡∏ñ‡∏π‡∏Å‡πÉ‡∏à‡πÄ‡∏ó‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Å‡πá‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢' });
        break;
      // case 20
      case `‡∏à‡πà‡∏≠‡∏¢`:
        return client.replyMessage(tokens, { type: 'text', text: '‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏Å' });
        break;
      // case 21
      case `‡∏à‡∏¥‡πä‡∏ö`:
        return client.replyMessage(tokens, { type: 'text', text: '‡πÅ‡∏°‡πà‡∏ô‡πâ‡∏≠‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢' });
        break;
      // case 22
      case `‡πÇ‡∏≠‡πâ`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏°‡∏≤‡∏£‡∏¥‡πÇ‡∏≠‡πâ ‡πÄ‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß' });
        break;
      // case 23
      case `‡πÑ‡∏Å‡πà`:
        return client.replyMessage(tokens, { type: 'text', text: '‡πÄ‡∏≠‡∏£‡∏¥‡∏Ñ ‡πÑ‡∏ö‡∏¢‡∏µ‡πà' });
        break;
      // case 24
      case `‡∏°‡∏≤‡πÅ‡∏°‡∏∞`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏´‡∏∂‡πã‡∏¢‡∏¢‡∏¢ ‡πÉ‡∏Ñ‡∏£‡∏à‡∏∞‡πÑ‡∏õ ‡πÑ‡∏Å‡∏•‡∏Å‡πá‡πÑ‡∏Å‡∏•' });
        break;
      // case 25
      case `‡∏ï‡∏≤‡πÅ‡∏ã‡∏ö‡πÅ‡∏ó‡πâ`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏û‡∏≠‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà ‡∏°‡∏≤‡πÄ‡∏î‡πâ‡∏≠‡πÜ' });
        break;
      // case 26
      case `‡πÉ‡∏Ñ‡∏£`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏Å‡∏π‡∏à‡∏∞‡πÑ‡∏õ‡∏£‡∏π‡πâ‡∏Å‡∏±‡∏ö‡∏°‡∏∂‡∏á‡∏´‡∏£‡∏≠' });
        break;
      // case 27
      case `‡πÄ‡∏Æ‡πá‡∏î‡∏á‡∏≤‡∏ô‡πÅ‡∏ô`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏°‡∏∂‡∏á‡∏ß‡πà‡∏≤‡∏Å‡∏π‡∏î‡∏µ‡∏î‡∏•‡∏π‡∏Å‡πÅ‡∏Å‡πâ‡∏ß‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏¥' });
        break;
      // case 28
      case `‡∏Ñ`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏Ñ‡∏ß‡∏¢‡πÑ‡∏£‡∏•‡πà‡∏∞' });
        break;
      // case 29
      case `‡∏à‡∏±‡∏Å‡∏ö‡∏≤‡∏ó‡∏™‡∏∞‡∏ö‡πâ‡∏≠`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏Å‡πá‡∏°‡∏≤‡∏î‡∏¥‡∏Ñ‡πâ‡∏≤‡∏ö‡∏ö‡∏ö‡∏ö' });
        break;
      // case 30
      case `‡πÑ‡∏ú`:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏°‡∏∂‡∏á‡∏ö‡πà‡∏£‡∏π‡πâ ‡∏Å‡∏π‡∏à‡∏∞‡∏£‡∏π‡πâ‡∏°‡∏±‡πä‡∏¢‡∏ô‡∏µ‡πà ?' });
        break;
      // case 31
      case `‡πÄ‡∏ö‡πâ‡∏¢`:
        return client.replyMessage(tokens, { type: 'text', text: '‡πÄ‡∏ö‡πâ‡∏¢‡∏´‡∏≤‡∏Ç‡∏µ‡πâ‡∏ï‡∏¥' });
        break;
      // case 32
      case `‡∏Ç‡∏µ‡πâ‡πÄ‡∏™‡∏¥‡∏ô`:
        return client.replyMessage(tokens, { type: 'text', text: '@Mr.M ‡∏Ñ‡∏ô‡∏ï‡πâ‡∏≤‡∏ß‡∏ß‡∏ß‡∏ä‡∏π‡πâ‡∏ß‡∏ß‡∏ß‡∏ß‡∏ß' });
        break;
      // case 33
      case `M`:
        return client.replyMessage(tokens, { type: 'text', text: 'M = ‡∏ú‡∏≠.' });
        break;
      // case 34
      case `@MR.watitü§°ü¶Ö `:
        return client.replyMessage(tokens, { type: 'text', text: '‡∏°‡∏≤‡πÜ ‡∏°‡∏≤‡∏Å‡∏¥‡∏ô‡∏¢‡πà‡∏≤‡∏á‡∏´‡∏°‡∏π' });
        break;
      // case 35
      case '@Mr.M ':
        return client.replyMessage(tokens, { type: 'text', text: '‡∏™‡∏ô‡πÉ‡∏à‡∏ó‡∏±‡∏Å‡πÅ‡∏ä‡∏ó' });
        break;
      // case 36
      case '‡∏ï‡πä‡∏∞':
        return client.replyMessage(tokens, { type: 'text', text: '‡πÄ‡∏ô‡πà‡∏≤' });
        break;
      // case 37
      case '‡πÄ‡∏ö‡∏¥‡∏£‡πå‡∏î':
        return client.replyMessage(tokens, { type: 'text', text: '‡∏≠‡∏Å‡∏´‡∏±‡∏Å ‡πÅ‡∏ï‡πà‡∏ö‡∏≠‡∏Å‡πÄ‡∏°‡∏µ‡∏¢‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ' });
        break;
      // case 38
      case `‡πÄ‡∏ö‡πâ‡∏¢‡∏¢`:
        return client.replyMessage(tokens, { type: 'text', text: '‡πÄ‡∏ö‡πâ‡∏¢‡∏´‡∏≤‡∏Ç‡∏µ‡πâ‡∏ï‡∏¥' });
        break;
      // case 39
      case `‡πÄ‡∏ö‡πâ‡∏¢‡∏¢‡∏¢`:
        return client.replyMessage(tokens, { type: 'text', text: '‡πÄ‡∏ö‡πâ‡∏¢‡∏´‡∏≤‡∏Ç‡∏µ‡πâ‡∏ï‡∏¥' });
        break;

      default:
        return Promise.resolve(null);
    }
  }
  return Promise.resolve(null);
}

module.exports = fnWord;